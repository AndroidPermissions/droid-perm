% Permission checkers
% ==================================

<android.content.Context: int checkSelfPermission(java.lang.String )> -> _PERM_CHECKER_
<android.support.v4.content.ContextCompat: int checkSelfPermission(android.content.Context,java.lang.String )> -> _PERM_CHECKER_

% Test apps: perm-test, dp_basic_threads, others
% ==================================

<edu.oregonstate.dp.test.FileManager: java.lang.String getCachePath(java.net.URL)> -> WRITE_EXTERNAL_STORAGE
<edu.oregonstate.dp.test.ThreadTestActivity: void sensitive()> -> DIAGNOSTIC
<edu.oregonstate.dp.test.ExecutorTestActivity: void sensitive()> -> DIAGNOSTIC
<edu.oregonstate.dp.test.LibCallbackExTestActivity: void sensitive()> -> DIAGNOSTIC
<edu.oregonstate.dp.test.MultiplePermActivity: void sensitive()> -> DIAGNOSTIC
<edu.oregonstate.dp.test.PropagatedMultiplePermActivity: void sensitive()> -> DIAGNOSTIC

% WRITE_EXTERNAL_STORAGE

<java.io.FileOutputStream: void <init>(java.io.FileDescriptor)> -> WRITE_EXTERNAL_STORAGE
<java.io.FileOutputStream: void <init>(java.io.File,boolean)> -> WRITE_EXTERNAL_STORAGE
%   Redundant, redirect to other constructors of FileOutputStream
%   Required if pure stubs JDK is used.
% <java.io.FileOutputStream: void <init>(java.lang.String)> -> WRITE_EXTERNAL_STORAGE
% <java.io.FileOutputStream: void <init>(java.lang.String,boolean)> -> WRITE_EXTERNAL_STORAGE
% <java.io.FileOutputStream: void <init>(java.io.File)> -> WRITE_EXTERNAL_STORAGE

% LOCATION

<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)> -> ACCESS_COARSE_LOCATION
<android.location.LocationManager: boolean addGpsStatusListener(android.location.GpsStatus$Listener)> -> ACCESS_FINE_LOCATION
<android.location.LocationManager: boolean addNmeaListener(android.location.GpsStatus$NmeaListener)> -> ACCESS_FINE_LOCATION

% Conversations app
% ==================================

% READ_CONTACTS 1

<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)> -> READ_CONTACTS
<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,android.os.CancellationSignal)> -> READ_CONTACTS

% READ_CONTACTS 2

<android.content.CursorLoader: void <init>(android.content.Context)> -> READ_CONTACTS
<android.content.CursorLoader: void <init>(android.content.Context,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)> -> READ_CONTACTS
