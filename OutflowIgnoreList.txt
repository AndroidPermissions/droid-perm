% Methods to be excluded from outflow analysis.
% Whenever such a method is encountered, its body will not be analyzed.

% Universal
%================================
? extends <android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
? extends <android.support.v4.app.ActivityCompat$OnRequestPermissionsResultCallback: void onRequestPermissionsResult(int,java.lang.String[],int[])>


% Compat framework
%================================

%   Contains checks for LOCATION. Risks polluting the analysis with false positive checks.
<android.support.v7.app.TwilightManager: android.location.Location getLastKnownLocation()>


% All methods inside a few android.support.v4.app classes:
% FragmentActivity, FragmentManagerImpl, Fragment.
% Reason: They all produce unfeasible paths that touch all fragments in the app from most activities.
% Full context sensitivity is likely not enough to solve this.
%================================

<android.support.v4.app.FragmentActivity: void dumpViewHierarchy(java.lang.String,java.io.PrintWriter,android.view.View)>
<android.support.v4.app.FragmentActivity: void requestPermissionsFromFragment(android.support.v4.app.Fragment,java.lang.String[],int)>
<android.support.v4.app.FragmentActivity: java.lang.String viewToString(android.view.View)>
<android.support.v4.app.FragmentActivity: android.view.View dispatchFragmentsOnCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)>
<android.support.v4.app.FragmentActivity: void doReallyStop(boolean)>
<android.support.v4.app.FragmentActivity: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<android.support.v4.app.FragmentActivity: java.lang.Object getLastCustomNonConfigurationInstance()>
<android.support.v4.app.FragmentActivity: android.support.v4.app.FragmentManager getSupportFragmentManager()>
<android.support.v4.app.FragmentActivity: android.support.v4.app.LoaderManager getSupportLoaderManager()>
<android.support.v4.app.FragmentActivity: android.support.v4.media.session.MediaControllerCompat getSupportMediaController()>
<android.support.v4.app.FragmentActivity: void onActivityResult(int,int,android.content.Intent)>
<android.support.v4.app.FragmentActivity: void onAttachFragment(android.support.v4.app.Fragment)>
<android.support.v4.app.FragmentActivity: void onBackPressed()>
<android.support.v4.app.FragmentActivity: void onConfigurationChanged(android.content.res.Configuration)>
<android.support.v4.app.FragmentActivity: void onCreate(android.os.Bundle)>
<android.support.v4.app.FragmentActivity: boolean onCreatePanelMenu(int,android.view.Menu)>
<android.support.v4.app.FragmentActivity: android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)>
<android.support.v4.app.FragmentActivity: android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet)>
<android.support.v4.app.FragmentActivity: void onDestroy()>
<android.support.v4.app.FragmentActivity: boolean onKeyDown(int,android.view.KeyEvent)>
<android.support.v4.app.FragmentActivity: void onLowMemory()>
<android.support.v4.app.FragmentActivity: boolean onMenuItemSelected(int,android.view.MenuItem)>
<android.support.v4.app.FragmentActivity: void onNewIntent(android.content.Intent)>
<android.support.v4.app.FragmentActivity: void onPanelClosed(int,android.view.Menu)>
<android.support.v4.app.FragmentActivity: void onPause()>
<android.support.v4.app.FragmentActivity: void onPostResume()>
<android.support.v4.app.FragmentActivity: boolean onPrepareOptionsPanel(android.view.View,android.view.Menu)>
<android.support.v4.app.FragmentActivity: boolean onPreparePanel(int,android.view.View,android.view.Menu)>
<android.support.v4.app.FragmentActivity: void onReallyStop()>
<android.support.v4.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
<android.support.v4.app.FragmentActivity: void onResume()>
<android.support.v4.app.FragmentActivity: void onResumeFragments()>
<android.support.v4.app.FragmentActivity: java.lang.Object onRetainCustomNonConfigurationInstance()>
<android.support.v4.app.FragmentActivity: java.lang.Object onRetainNonConfigurationInstance()>
<android.support.v4.app.FragmentActivity: void onSaveInstanceState(android.os.Bundle)>
<android.support.v4.app.FragmentActivity: void onStart()>
<android.support.v4.app.FragmentActivity: void onStateNotSaved()>
<android.support.v4.app.FragmentActivity: void onStop()>
<android.support.v4.app.FragmentActivity: void setEnterSharedElementCallback(android.support.v4.app.SharedElementCallback)>
<android.support.v4.app.FragmentActivity: void setExitSharedElementCallback(android.support.v4.app.SharedElementCallback)>
<android.support.v4.app.FragmentActivity: void setSupportMediaController(android.support.v4.media.session.MediaControllerCompat)>
<android.support.v4.app.FragmentActivity: void startActivityForResult(android.content.Intent,int)>
<android.support.v4.app.FragmentActivity: void startActivityFromFragment(android.support.v4.app.Fragment,android.content.Intent,int)>
<android.support.v4.app.FragmentActivity: void supportFinishAfterTransition()>
<android.support.v4.app.FragmentActivity: void supportInvalidateOptionsMenu()>
<android.support.v4.app.FragmentActivity: void supportPostponeEnterTransition()>
<android.support.v4.app.FragmentActivity: void supportStartPostponedEnterTransition()>
<android.support.v4.app.FragmentActivity: void validateRequestPermissionsRequestCode(int)>

<android.support.v4.app.FragmentManagerImpl: void checkStateLoss()>
<android.support.v4.app.FragmentManagerImpl: android.view.animation.Animation makeFadeAnimation(android.content.Context,float,float)>
<android.support.v4.app.FragmentManagerImpl: android.view.animation.Animation makeOpenCloseAnimation(android.content.Context,float,float,float,float)>
<android.support.v4.app.FragmentManagerImpl: boolean modifiesAlpha(android.view.animation.Animation)>
<android.support.v4.app.FragmentManagerImpl: int reverseTransit(int)>
<android.support.v4.app.FragmentManagerImpl: void setHWLayerAnimListenerIfAlpha(android.view.View,android.view.animation.Animation)>
<android.support.v4.app.FragmentManagerImpl: boolean shouldRunOnHWLayer(android.view.View,android.view.animation.Animation)>
<android.support.v4.app.FragmentManagerImpl: void throwException(java.lang.RuntimeException)>
<android.support.v4.app.FragmentManagerImpl: int transitToStyleIndex(int,boolean)>
<android.support.v4.app.FragmentManagerImpl: void addBackStackState(android.support.v4.app.BackStackRecord)>
<android.support.v4.app.FragmentManagerImpl: void addFragment(android.support.v4.app.Fragment,boolean)>
<android.support.v4.app.FragmentManagerImpl: void addOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener)>
<android.support.v4.app.FragmentManagerImpl: int allocBackStackIndex(android.support.v4.app.BackStackRecord)>
<android.support.v4.app.FragmentManagerImpl: void attachController(android.support.v4.app.FragmentHostCallback,android.support.v4.app.FragmentContainer,android.support.v4.app.Fragment)>
<android.support.v4.app.FragmentManagerImpl: void attachFragment(android.support.v4.app.Fragment,int,int)>
<android.support.v4.app.FragmentManagerImpl: android.support.v4.app.FragmentTransaction beginTransaction()>
<android.support.v4.app.FragmentManagerImpl: void detachFragment(android.support.v4.app.Fragment,int,int)>
<android.support.v4.app.FragmentManagerImpl: void dispatchActivityCreated()>
<android.support.v4.app.FragmentManagerImpl: void dispatchConfigurationChanged(android.content.res.Configuration)>
<android.support.v4.app.FragmentManagerImpl: boolean dispatchContextItemSelected(android.view.MenuItem)>
<android.support.v4.app.FragmentManagerImpl: void dispatchCreate()>
<android.support.v4.app.FragmentManagerImpl: boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)>
<android.support.v4.app.FragmentManagerImpl: void dispatchDestroy()>
<android.support.v4.app.FragmentManagerImpl: void dispatchDestroyView()>
<android.support.v4.app.FragmentManagerImpl: void dispatchLowMemory()>
<android.support.v4.app.FragmentManagerImpl: boolean dispatchOptionsItemSelected(android.view.MenuItem)>
<android.support.v4.app.FragmentManagerImpl: void dispatchOptionsMenuClosed(android.view.Menu)>
<android.support.v4.app.FragmentManagerImpl: void dispatchPause()>
<android.support.v4.app.FragmentManagerImpl: boolean dispatchPrepareOptionsMenu(android.view.Menu)>
<android.support.v4.app.FragmentManagerImpl: void dispatchReallyStop()>
<android.support.v4.app.FragmentManagerImpl: void dispatchResume()>
<android.support.v4.app.FragmentManagerImpl: void dispatchStart()>
<android.support.v4.app.FragmentManagerImpl: void dispatchStop()>
<android.support.v4.app.FragmentManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<android.support.v4.app.FragmentManagerImpl: void enqueueAction(java.lang.Runnable,boolean)>
<android.support.v4.app.FragmentManagerImpl: boolean execPendingActions()>
<android.support.v4.app.FragmentManagerImpl: boolean executePendingTransactions()>
<android.support.v4.app.FragmentManagerImpl: android.support.v4.app.Fragment findFragmentById(int)>
<android.support.v4.app.FragmentManagerImpl: android.support.v4.app.Fragment findFragmentByTag(java.lang.String)>
<android.support.v4.app.FragmentManagerImpl: android.support.v4.app.Fragment findFragmentByWho(java.lang.String)>
<android.support.v4.app.FragmentManagerImpl: void freeBackStackIndex(int)>
<android.support.v4.app.FragmentManagerImpl: android.support.v4.app.FragmentManager$BackStackEntry getBackStackEntryAt(int)>
<android.support.v4.app.FragmentManagerImpl: int getBackStackEntryCount()>
<android.support.v4.app.FragmentManagerImpl: android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String)>
<android.support.v4.app.FragmentManagerImpl: java.util.List getFragments()>
<android.support.v4.app.FragmentManagerImpl: android.support.v4.view.LayoutInflaterFactory getLayoutInflaterFactory()>
<android.support.v4.app.FragmentManagerImpl: void hideFragment(android.support.v4.app.Fragment,int,int)>
<android.support.v4.app.FragmentManagerImpl: boolean isDestroyed()>
<android.support.v4.app.FragmentManagerImpl: android.view.animation.Animation loadAnimation(android.support.v4.app.Fragment,int,boolean,int)>
<android.support.v4.app.FragmentManagerImpl: void makeActive(android.support.v4.app.Fragment)>
<android.support.v4.app.FragmentManagerImpl: void makeInactive(android.support.v4.app.Fragment)>
<android.support.v4.app.FragmentManagerImpl: void moveToState(int,int,int,boolean)>
<android.support.v4.app.FragmentManagerImpl: void moveToState(int,boolean)>
<android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment)>
<android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)>
<android.support.v4.app.FragmentManagerImpl: void noteStateNotSaved()>
<android.support.v4.app.FragmentManagerImpl: android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)>
<android.support.v4.app.FragmentManagerImpl: void performPendingDeferredStart(android.support.v4.app.Fragment)>
<android.support.v4.app.FragmentManagerImpl: void popBackStack()>
<android.support.v4.app.FragmentManagerImpl: void popBackStack(int,int)>
<android.support.v4.app.FragmentManagerImpl: void popBackStack(java.lang.String,int)>
<android.support.v4.app.FragmentManagerImpl: boolean popBackStackImmediate()>
<android.support.v4.app.FragmentManagerImpl: boolean popBackStackImmediate(int,int)>
<android.support.v4.app.FragmentManagerImpl: boolean popBackStackImmediate(java.lang.String,int)>
<android.support.v4.app.FragmentManagerImpl: boolean popBackStackState(android.os.Handler,java.lang.String,int,int)>
<android.support.v4.app.FragmentManagerImpl: void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment)>
<android.support.v4.app.FragmentManagerImpl: void removeFragment(android.support.v4.app.Fragment,int,int)>
<android.support.v4.app.FragmentManagerImpl: void removeOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener)>
<android.support.v4.app.FragmentManagerImpl: void reportBackStackChanged()>
<android.support.v4.app.FragmentManagerImpl: void restoreAllState(android.os.Parcelable,java.util.List)>
<android.support.v4.app.FragmentManagerImpl: java.util.ArrayList retainNonConfig()>
<android.support.v4.app.FragmentManagerImpl: android.os.Parcelable saveAllState()>
<android.support.v4.app.FragmentManagerImpl: android.os.Bundle saveFragmentBasicState(android.support.v4.app.Fragment)>
<android.support.v4.app.FragmentManagerImpl: android.support.v4.app.Fragment$SavedState saveFragmentInstanceState(android.support.v4.app.Fragment)>
<android.support.v4.app.FragmentManagerImpl: void saveFragmentViewState(android.support.v4.app.Fragment)>
<android.support.v4.app.FragmentManagerImpl: void setBackStackIndex(int,android.support.v4.app.BackStackRecord)>
<android.support.v4.app.FragmentManagerImpl: void showFragment(android.support.v4.app.Fragment,int,int)>
<android.support.v4.app.FragmentManagerImpl: void startPendingDeferredFragments()>

? extends <android.support.v4.app.Fragment: android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String)>
? extends <android.support.v4.app.Fragment: android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle)>
? extends <android.support.v4.app.Fragment: boolean isSupportFragmentClass(android.content.Context,java.lang.String)>
? extends <android.support.v4.app.Fragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
? extends <android.support.v4.app.Fragment: boolean equals(java.lang.Object)>
? extends <android.support.v4.app.Fragment: android.support.v4.app.Fragment findFragmentByWho(java.lang.String)>
? extends <android.support.v4.app.Fragment: android.support.v4.app.FragmentActivity getActivity()>
? extends <android.support.v4.app.Fragment: boolean getAllowEnterTransitionOverlap()>
? extends <android.support.v4.app.Fragment: boolean getAllowReturnTransitionOverlap()>
? extends <android.support.v4.app.Fragment: android.os.Bundle getArguments()>
? extends <android.support.v4.app.Fragment: android.support.v4.app.FragmentManager getChildFragmentManager()>
? extends <android.support.v4.app.Fragment: android.content.Context getContext()>
? extends <android.support.v4.app.Fragment: java.lang.Object getEnterTransition()>
? extends <android.support.v4.app.Fragment: java.lang.Object getExitTransition()>
? extends <android.support.v4.app.Fragment: android.support.v4.app.FragmentManager getFragmentManager()>
? extends <android.support.v4.app.Fragment: java.lang.Object getHost()>
? extends <android.support.v4.app.Fragment: int getId()>
? extends <android.support.v4.app.Fragment: android.view.LayoutInflater getLayoutInflater(android.os.Bundle)>
? extends <android.support.v4.app.Fragment: android.support.v4.app.LoaderManager getLoaderManager()>
? extends <android.support.v4.app.Fragment: android.support.v4.app.Fragment getParentFragment()>
? extends <android.support.v4.app.Fragment: java.lang.Object getReenterTransition()>
? extends <android.support.v4.app.Fragment: android.content.res.Resources getResources()>
? extends <android.support.v4.app.Fragment: boolean getRetainInstance()>
? extends <android.support.v4.app.Fragment: java.lang.Object getReturnTransition()>
? extends <android.support.v4.app.Fragment: java.lang.Object getSharedElementEnterTransition()>
? extends <android.support.v4.app.Fragment: java.lang.Object getSharedElementReturnTransition()>
? extends <android.support.v4.app.Fragment: java.lang.String getString(int)>
? extends <android.support.v4.app.Fragment: java.lang.String getString(int,java.lang.Object[])>
? extends <android.support.v4.app.Fragment: java.lang.String getTag()>
? extends <android.support.v4.app.Fragment: android.support.v4.app.Fragment getTargetFragment()>
? extends <android.support.v4.app.Fragment: int getTargetRequestCode()>
? extends <android.support.v4.app.Fragment: java.lang.CharSequence getText(int)>
? extends <android.support.v4.app.Fragment: boolean getUserVisibleHint()>
? extends <android.support.v4.app.Fragment: android.view.View getView()>
? extends <android.support.v4.app.Fragment: boolean hasOptionsMenu()>
? extends <android.support.v4.app.Fragment: int hashCode()>
? extends <android.support.v4.app.Fragment: void initState()>
? extends <android.support.v4.app.Fragment: void instantiateChildFragmentManager()>
? extends <android.support.v4.app.Fragment: boolean isAdded()>
? extends <android.support.v4.app.Fragment: boolean isDetached()>
? extends <android.support.v4.app.Fragment: boolean isHidden()>
? extends <android.support.v4.app.Fragment: boolean isInBackStack()>
? extends <android.support.v4.app.Fragment: boolean isInLayout()>
? extends <android.support.v4.app.Fragment: boolean isMenuVisible()>
? extends <android.support.v4.app.Fragment: boolean isRemoving()>
? extends <android.support.v4.app.Fragment: boolean isResumed()>
? extends <android.support.v4.app.Fragment: boolean isVisible()>
? extends <android.support.v4.app.Fragment: void onActivityCreated(android.os.Bundle)>
? extends <android.support.v4.app.Fragment: void onActivityResult(int,int,android.content.Intent)>
? extends <android.support.v4.app.Fragment: void onAttach(android.app.Activity)>
? extends <android.support.v4.app.Fragment: void onAttach(android.content.Context)>
? extends <android.support.v4.app.Fragment: void onConfigurationChanged(android.content.res.Configuration)>
? extends <android.support.v4.app.Fragment: boolean onContextItemSelected(android.view.MenuItem)>
? extends <android.support.v4.app.Fragment: void onCreate(android.os.Bundle)>
? extends <android.support.v4.app.Fragment: android.view.animation.Animation onCreateAnimation(int,boolean,int)>
? extends <android.support.v4.app.Fragment: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>
? extends <android.support.v4.app.Fragment: void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)>
? extends <android.support.v4.app.Fragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>
? extends <android.support.v4.app.Fragment: void onDestroy()>
? extends <android.support.v4.app.Fragment: void onDestroyOptionsMenu()>
? extends <android.support.v4.app.Fragment: void onDestroyView()>
? extends <android.support.v4.app.Fragment: void onDetach()>
? extends <android.support.v4.app.Fragment: void onHiddenChanged(boolean)>
? extends <android.support.v4.app.Fragment: void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle)>
? extends <android.support.v4.app.Fragment: void onInflate(android.content.Context,android.util.AttributeSet,android.os.Bundle)>
? extends <android.support.v4.app.Fragment: void onLowMemory()>
? extends <android.support.v4.app.Fragment: boolean onOptionsItemSelected(android.view.MenuItem)>
? extends <android.support.v4.app.Fragment: void onOptionsMenuClosed(android.view.Menu)>
? extends <android.support.v4.app.Fragment: void onPause()>
? extends <android.support.v4.app.Fragment: void onPrepareOptionsMenu(android.view.Menu)>
? extends <android.support.v4.app.Fragment: void onRequestPermissionsResult(int,java.lang.String[],int[])>
? extends <android.support.v4.app.Fragment: void onResume()>
? extends <android.support.v4.app.Fragment: void onSaveInstanceState(android.os.Bundle)>
? extends <android.support.v4.app.Fragment: void onStart()>
? extends <android.support.v4.app.Fragment: void onStop()>
? extends <android.support.v4.app.Fragment: void onViewCreated(android.view.View,android.os.Bundle)>
? extends <android.support.v4.app.Fragment: void onViewStateRestored(android.os.Bundle)>
? extends <android.support.v4.app.Fragment: void performActivityCreated(android.os.Bundle)>
? extends <android.support.v4.app.Fragment: void performConfigurationChanged(android.content.res.Configuration)>
? extends <android.support.v4.app.Fragment: boolean performContextItemSelected(android.view.MenuItem)>
? extends <android.support.v4.app.Fragment: void performCreate(android.os.Bundle)>
? extends <android.support.v4.app.Fragment: boolean performCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)>
? extends <android.support.v4.app.Fragment: android.view.View performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>
? extends <android.support.v4.app.Fragment: void performDestroy()>
? extends <android.support.v4.app.Fragment: void performDestroyView()>
? extends <android.support.v4.app.Fragment: void performLowMemory()>
? extends <android.support.v4.app.Fragment: boolean performOptionsItemSelected(android.view.MenuItem)>
? extends <android.support.v4.app.Fragment: void performOptionsMenuClosed(android.view.Menu)>
? extends <android.support.v4.app.Fragment: void performPause()>
? extends <android.support.v4.app.Fragment: boolean performPrepareOptionsMenu(android.view.Menu)>
? extends <android.support.v4.app.Fragment: void performReallyStop()>
? extends <android.support.v4.app.Fragment: void performResume()>
? extends <android.support.v4.app.Fragment: void performSaveInstanceState(android.os.Bundle)>
? extends <android.support.v4.app.Fragment: void performStart()>
? extends <android.support.v4.app.Fragment: void performStop()>
? extends <android.support.v4.app.Fragment: void registerForContextMenu(android.view.View)>
? extends <android.support.v4.app.Fragment: void requestPermissions(java.lang.String[],int)>
? extends <android.support.v4.app.Fragment: void restoreViewState(android.os.Bundle)>
? extends <android.support.v4.app.Fragment: void setAllowEnterTransitionOverlap(boolean)>
? extends <android.support.v4.app.Fragment: void setAllowReturnTransitionOverlap(boolean)>
? extends <android.support.v4.app.Fragment: void setArguments(android.os.Bundle)>
? extends <android.support.v4.app.Fragment: void setEnterSharedElementCallback(android.support.v4.app.SharedElementCallback)>


% Test apps
%================================
<edu.oregonstate.dp.ignore.IgnoreListTestAct: void sensitiveIgnored()>
<edu.oregonstate.dp.ignore.IgnoreListTestAct: void sensitiveIgnored2()>

%   Twidere app
%========================================
%   78 false positives. Perm checked by pattern:
%       catch (SecurityException ignore) {}
<org.mariotaku.twidere.util.Utils: android.location.Location getCachedLocation(android.content.Context)>
